#include <iostream>
#include <vector>
using namespace std;

int main() {
    // Prompt the user to input the number of elements
    int n;
    cout << "Enter the size of the chessboard (n): ";
    cin >> n;

    // Check for valid input
    if (n <= 0) {
        cout << "Invalid size. Please enter a positive integer." << endl;
        return 1;
    }

    // Create and fill the array with user input
    vector<int> arr(n);
    cout << "Enter " << n << " elements to fill the array: ";
    for (int i = 0; i < n; ++i) {
        cin >> arr[i];
    }

    // Create the n x n chessboard matrix
    vector<vector<int>> chessboard(n, vector<int>(n, 0));

    // Fill the diagonal with 1s
    for (int i = 0; i < n; ++i) {
        chessboard[i][i] = 1;
    }

    // Fill the lower triangle with array elements on black spots (i + j is odd)
    int index = 0;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < i; ++j) {  // Iterate only over the lower triangle excluding the diagonal
            if ((i + j) % 2 == 1) {  // Check for black spot
                if (index < n) {
                    chessboard[i][j] = arr[index];
                    ++index;
                } else {
                    chessboard[i][j] = 0; // Default fill if array runs out
                }
            }
        }
    }

    // Print the resulting chessboard matrix
    cout << "\nGenerated chessboard matrix:\n";
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            cout << chessboard[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}
